From 2363bc22f3fe2a28e67bee0b32def2997df5437e Mon Sep 17 00:00:00 2001
From: Zach Reizner <zachr@chromium.org>
Date: Wed, 21 Jan 2015 13:23:58 -0800
Subject: [PATCH 23/27] egl/dri2: add support for image, config query, and
 robustness extensions

BUG=chromium:394868
TEST=None

Change-Id: I769c52aaad75221719df5ffd9c0d5c50dcdabe2c
---
 src/egl/drivers/dri2/egl_dri2.c      | 23 +++++++++++++----------
 src/egl/drivers/dri2/platform_null.c | 12 +++++++++---
 2 files changed, 22 insertions(+), 13 deletions(-)

diff --git a/src/egl/drivers/dri2/egl_dri2.c b/src/egl/drivers/dri2/egl_dri2.c
index 7d9cee3..cbb9e38 100644
--- a/src/egl/drivers/dri2/egl_dri2.c
+++ b/src/egl/drivers/dri2/egl_dri2.c
@@ -559,6 +559,7 @@ dri2_create_screen(_EGLDisplay *disp)
 {
    const __DRIextension **extensions;
    struct dri2_egl_display *dri2_dpy;
+   unsigned i;
 
    dri2_dpy = disp->DriverData;
 
@@ -599,25 +600,27 @@ dri2_create_screen(_EGLDisplay *disp)
    extensions = dri2_dpy->core->getExtensions(dri2_dpy->dri_screen);
    
    if (dri2_dpy->dri2) {
-      unsigned i;
 
       if (!dri2_bind_extensions(dri2_dpy, dri2_core_extensions, extensions))
          goto cleanup_dri_screen;
-
-      for (i = 0; extensions[i]; i++) {
-	 if (strcmp(extensions[i]->name, __DRI2_ROBUSTNESS) == 0) {
-            dri2_dpy->robustness = (__DRIrobustnessExtension *) extensions[i];
-	 }
-	 if (strcmp(extensions[i]->name, __DRI2_CONFIG_QUERY) == 0) {
-	    dri2_dpy->config = (__DRI2configQueryExtension *) extensions[i];
-	 }
-      }
    } else {
       assert(dri2_dpy->swrast);
       if (!dri2_bind_extensions(dri2_dpy, swrast_core_extensions, extensions))
          goto cleanup_dri_screen;
    }
 
+   for (i = 0; extensions[i]; i++) {
+      if (strcmp(extensions[i]->name, __DRI2_ROBUSTNESS) == 0) {
+         dri2_dpy->robustness = (__DRIrobustnessExtension *) extensions[i];
+      }
+      if (strcmp(extensions[i]->name, __DRI2_CONFIG_QUERY) == 0) {
+         dri2_dpy->config = (__DRI2configQueryExtension *) extensions[i];
+      }
+      if (strcmp(extensions[i]->name, __DRI_IMAGE) == 0) {
+         dri2_dpy->image = (__DRIimageExtension *) extensions[i];
+      }
+   }
+
    dri2_setup_screen(disp);
 
    return EGL_TRUE;
diff --git a/src/egl/drivers/dri2/platform_null.c b/src/egl/drivers/dri2/platform_null.c
index 9c59809..56bc82b 100644
--- a/src/egl/drivers/dri2/platform_null.c
+++ b/src/egl/drivers/dri2/platform_null.c
@@ -103,8 +103,13 @@ dri2_initialize_null(_EGLDriver *drv, _EGLDisplay *disp)
    }
 
    if (!driver_loaded) {
-      err = "DRI2: failed to load driver";
-      goto cleanup_display;
+      dri2_dpy->driver_name = strdup("swrast");
+      if (!dri2_load_driver_swrast(disp))
+      {
+         err = "DRI2: failed to load driver";
+         free(dri2_dpy->driver_name);
+         goto cleanup_display;
+      }
    }
 
    dri2_dpy->dri2_loader_extension.base.name = __DRI_DRI2_LOADER;
@@ -148,7 +153,8 @@ dri2_initialize_null(_EGLDriver *drv, _EGLDisplay *disp)
 cleanup_driver:
    dlclose(dri2_dpy->driver);
    free(dri2_dpy->driver_name);
-   close(dri2_dpy->fd);
+   if (dri2_dpy->fd >= 0)
+      close(dri2_dpy->fd);
 cleanup_display:
    free(dri2_dpy);
 
-- 
2.3.1

